################################################################################
## Parallel Makefile template for fortran programs with manually resolved module
## dependencies. Run as 'make -j N', N: max number of concurent build processes.
## Just '-j' for unlimited parallel build (if the computer needs jammeing).
## Usual suspects: all(default), clean
##
## Project description shall be provided in rules.mk
##
## Dimitar Pashov <d.pashov@gmail.com> 3-Mar-2012
##
##
## Better make a backup before messing with this section and keep a tab with
## http://www.gnu.org/software/make/manual/ handy


srcpath ?= .

# Compilers, flags, libs etc...
include $(srcpath)/flags.mk

bldpath ?= bld
bldpath := $(srcpath)/$(bldpath)
export bldpath

# Flexible "out of tree" build thanks to Paul D. Smith <psmith@gnu.org>
# http://mad-scientist.net/make/multi-arch.html
ifneq ($(realpath $(bldpath)),$(realpath $(CURDIR)))
  include $(srcpath)/otree.mk
else

include $(srcpath)/rules.mk


# Where to put the .mod files
modpath ?= mods/

vpath %.mod $(modpath)
vpath %.f90 $(srcpath)
vpath %.F90 $(srcpath)
vpath %.cxx $(srcpath)
vpath %.c   $(srcpath)
vpath %.h   $(srcpath)
vpath %.mk  $(srcpath)



fflags := $(fflags) $(modflag) $(modpath)

flags.mk.ref: $(srcpath)/flags.mk
	cp $^ $@

defgoal: all flags.mk.ref

#.INTERMEDIATE:
.DEFAULT_GOAL := defgoal
.PHONY: all
.PRECIOUS: %/
# DO NOT REMOVE THIS! It keeps away some silly autogenerated rules which may even ruin the sources.
.SUFFIXES:

endif








